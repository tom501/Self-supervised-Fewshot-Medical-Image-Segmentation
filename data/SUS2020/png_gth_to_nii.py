#!/usr/bin/env python# coding: utf-8# ## Converting labels from png to nii file# # # ### Overview# # This is the first step for data preparation# # Input: ground truth labels in `.png` format# # Output: labels in `.nii` format, indexed by patient id# In[13]:import osimport globimport numpy as npfrom PIL import  ImageOps, Imageimport matplotlib.pyplot as pltimport SimpleITK as sitkimport syssys.path.insert(0, '../../dataloaders/')import niftiio as nioisDWI = Falseexample = "/home/prosjekt/PerfusionCT/StrokeSUS/DWI/REGISTERED/COMBINED/GT/CTP_01_001/01.png" # example of ground-truth file### search for scan idsids = os.listdir("/home/prosjekt/PerfusionCT/StrokeSUS/COMBINED/GT_TIFF/")OUT_DIR = "/home/stud/lucat/PhD_Project/ADNet/nii_studies/"  #'/bhome/lucat/nii_studies/'# ids = os.listdir("/home/prosjekt/PerfusionCT/StrokeSUS/DWI/REGISTERED_2.0/GT/")# OUT_DIR = '/bhome/lucat/DWI_nii_studies/'print(ids)#### Write them to nii files for the ease of loading in futurefor curr_id in ids:    if os.path.isdir(f'{OUT_DIR}/study_{curr_id}/') or isDWI:        if isDWI:            pngs = glob.glob(f"/home/prosjekt/PerfusionCT/StrokeSUS/DWI/REGISTERED_2.0/GT/{curr_id}/*.png")            pngs = sorted(pngs, key=lambda x: int(os.path.basename(x).split(".png")[0]))        else:            pngs = glob.glob(f'/home/prosjekt/PerfusionCT/StrokeSUS/COMBINED/GT_TIFF/{curr_id}/*.tiff')            pngs = sorted(pngs, key=lambda x: int(os.path.basename(x).split(".tiff")[0]))        buffer = []        for fid in pngs:             img = Image.open(fid)            img = np.true_divide(img,1)  # convert to numpy            if img.max()> 300:                img = np.true_divide(img,256)            img = Image.fromarray(img.astype(np.uint8))            buffer.append(ImageOps.grayscale(img))        vol = np.stack(buffer, axis=0)        # get reference        ref_img = f'{OUT_DIR}/study_{curr_id}/0.nii.gz' if not isDWI else f'{OUT_DIR}/study_{curr_id}.nii.gz'        img_o = sitk.ReadImage(ref_img)        vol_o = nio.np2itk(img=vol, ref_obj=img_o)        sitk.WriteImage(vol_o, f'{OUT_DIR}/label_{curr_id}.nii.gz')        print(f'label with id {curr_id} has been saved!')# In[ ]: